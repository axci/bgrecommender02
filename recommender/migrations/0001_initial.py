# Generated by Django 4.2.1 on 2023-06-03 11:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['-title'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['-title'],
            },
        ),
        migrations.CreateModel(
            name='Designer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['-title'],
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gameid', models.IntegerField()),
                ('title', models.CharField(max_length=150)),
                ('year', models.IntegerField()),
                ('num_voters', models.IntegerField()),
                ('rating_geek', models.FloatField()),
                ('reating_avg', models.FloatField()),
                ('playingtime', models.IntegerField()),
                ('minplayers', models.IntegerField()),
                ('maxplayers', models.IntegerField()),
                ('minage', models.IntegerField()),
                ('weight', models.FloatField()),
                ('artist', models.ManyToManyField(to='recommender.artist')),
                ('category', models.ManyToManyField(to='recommender.category')),
                ('designer', models.ManyToManyField(to='recommender.designer')),
            ],
            options={
                'ordering': ['-title'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['-name'],
                'indexes': [models.Index(fields=['-name'], name='recommender_name_ebe014_idx')],
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommender.game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommender.user')),
            ],
        ),
        migrations.CreateModel(
            name='Mechanic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['-title'],
                'indexes': [models.Index(fields=['-title'], name='recommender_title_e3aa0f_idx')],
            },
        ),
        migrations.CreateModel(
            name='GameType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
            ],
            options={
                'ordering': ['-title'],
                'indexes': [models.Index(fields=['-title'], name='recommender_title_41c861_idx')],
            },
        ),
        migrations.AddField(
            model_name='game',
            name='gametype',
            field=models.ManyToManyField(to='recommender.gametype'),
        ),
        migrations.AddField(
            model_name='game',
            name='mechanic',
            field=models.ManyToManyField(to='recommender.mechanic'),
        ),
        migrations.AddIndex(
            model_name='designer',
            index=models.Index(fields=['-title'], name='recommender_title_9d3821_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['-title'], name='recommender_title_5da3ef_idx'),
        ),
        migrations.AddIndex(
            model_name='artist',
            index=models.Index(fields=['-title'], name='recommender_title_dd09d2_idx'),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['-title'], name='recommender_title_1a2539_idx'),
        ),
    ]
